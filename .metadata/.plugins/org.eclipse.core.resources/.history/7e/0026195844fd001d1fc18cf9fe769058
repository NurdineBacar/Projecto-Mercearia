package ClasseDeObjecto;

import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import BD.Bd;

public class Venda {
	private int codigo;
	private Produto produto;
	private int quantidade;
	private  String produtoString,dataDaVenda,venda,lote;
	private double valorAPagar;
	
	
	
	public Venda(Produto produto, int quantidade,double valorAPagar, String dataDaVenda) {
		this.codigo=this.setCodigo2();
		this.produto = produto;
		this.quantidade = quantidade;
		this.dataDaVenda = dataDaVenda;
		this.venda = this.setVenda();;
		this.valorAPagar = valorAPagar;
	}

	public Venda(int codigo, Produto produto, double valorAPagar) {
		this.codigo = codigo;
		this.produto = produto;
		this.valorAPagar = valorAPagar;
//		this.dataDaVenda = dataDaVenda;
	}
	
	public Venda(int codigo,Produto produto, double valorAPagar, int quantidade) {
		this.codigo =codigo;
		this.produto = produto;
		this.quantidade= quantidade;
		this.valorAPagar = valorAPagar;
	}
	
	public Venda(int codigo,Produto produto,int quantidade,double vApagar) {
		this.codigo=codigo;
		this.produto=produto;
		this.quantidade=quantidade;
		this.valorAPagar=vApagar;
	}
	
	
	
	
	public int getCodigo() {
		return codigo;
	}

	public void setCodigo(int codigo) {
		this.codigo = codigo;
	}
	
	public int setCodigo() {
		int codigo=0;
		try {
			ArrayList<Venda> listaVenda= Bd.listarVenda();
			
			for(int i=0;i<listaVenda.size();i++) {
				if(listaVenda.get(i).getCodigo()==codigo) {
					codigo++;
				}
			}
		} catch (Exception e) {
			
		}
		return this.codigo=codigo;
	}
	public int setCodigo2() {
		int codigo=0;
		try {
			ArrayList<Venda> listaVenda= Bd.lerRelatorioVenda();
			
			for(int i=0;i<listaVenda.size();i++) {
				if(listaVenda.get(i).getCodigo()==codigo) {
					codigo++;
				}
			}
		} catch (Exception e) {
			
		}
		return this.codigo=codigo;
	}

	public Produto getProduto() {
		return produto;
	}

	public void setProduto(Produto produto) {
		this.produto = produto;
	}

	public double getValorAPagar() {
		return valorAPagar;
	}

	
	
	public int getQuantidade() {
		return quantidade;
	}

	public void setQuantidade(int quantidade) {
		this.quantidade = quantidade;
	}

	public void setValorAPagar(int valorAPagar) {
		this.valorAPagar = valorAPagar;
	}

	public String getProdutoString() {
		return produtoString;
	}

	public void setProdutoString(String produtoString) {
		this.produtoString = produtoString;
	}

	public String getDataDaVenda() {
		return dataDaVenda;
	}

	public void setDataDaVenda(String dataDaVenda) {
		this.dataDaVenda = dataDaVenda;
	}

	public String getVenda() {
		return venda;
	}

	public void setVenda(String venda) {
		this.venda = venda;
	}
	
	public String setVenda() {		
		return this.venda="Venda"+(Math.random()*88);
	}

	public String toString() {
		return codigo+";"+produto.toString3()+";"+quantidade+";"+valorAPagar;
	}
	public String toString2() {
		return codigo+";"+produto.toString3()+";"+quantidade+";"+valorAPagar+";"+dataDaVenda;
	}
	
	public static void registoVenda(int codigo,Produto produto, int qtd,double soma) {
		try {
			FileWriter file= new FileWriter("venda.txt",true);
			BufferedWriter write= new BufferedWriter(file);
//			Date x= new Date();
//			SimpleDateFormat simple= new SimpleDateFormat("dd/MM/yy");
			
			Venda venda= new Venda(codigo,produto, soma, qtd);
			write.write(venda.toString());
			write.newLine();
			write.close();
			
		} catch (FileNotFoundException e) {
			// TODO: handle exception
		}catch(Exception e) {
			
		}
	}
	
	public static double calculoDaVenda() {
		ArrayList<Venda> listaVenda=Bd.listarVenda();
		double totalApagar=0;
		for(int i=0;i<listaVenda.size();i++) {
			totalApagar+=listaVenda.get(i).getValorAPagar();
		}
		return totalApagar;
	}
	
	public void emissaoDeRecibo() {
		
	}
	
	public static void venda() {
		try {
			ArrayList<Venda> venda=Bd.listarVenda();
			ArrayList<Produto> produto=Bd.listarProdutos();
			
			FileWriter file= new FileWriter("relatorioVenda.txt",true);
			BufferedWriter write= new BufferedWriter(file);
			int qtd=0;
			for(int i=0;i<venda.size();i++) {
				if(venda.get(i).getCodigo()==produto.get(i).getCodigo()) {
					qtd=produto.get(i).getQuantidade()-venda.get(i).getQuantidade();
					produto.get(i).setQuantidade(qtd);
	
				}
				write.write(venda.get(i).toString2());
				write.newLine();
			}
			write.close();
			file.close();
			
			FileWriter file2=new FileWriter("produtos.txt");
			BufferedWriter write2= new BufferedWriter(file2);
			
			for(int i=0;i<produto.size();i++) {
				write2.write(produto.get(i).toString2());
				write2.newLine();
			}
			write2.close();
			file2.close();
			
			limparVenda();
		} catch (FileNotFoundException e) {
			// TODO: handle exception
		}catch(Exception e) {
			
		}
	}
	
	public static void limparVenda() {
		try {
			FileWriter file= new FileWriter("venda.txt");
			BufferedWriter write= new BufferedWriter(file);
			
			write.nullWriter();
			write.close();
			file.close();
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
	
}
